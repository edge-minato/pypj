name: Unittest
on:
  push:
    branches:
      - main
      - develop
    paths:
      - ".github/workflows/*"
      - "pypj/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
  pull_request:
    branches:
      - main
      - develop
jobs:
  unittest:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Echo branch
        run: git branch

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Unit test
        run: poetry run pytest ./tests -v --cov=pypj --cov-branch --cov-report=xml

      - name: Test with linter
        run: poetry run pflake8 --statistics ./pypj ./tests

      - name: Test with formatter
        run: poetry run black ./pypj ./tests

      - name: Test with type checker
        run: poetry run mypy ./pypj ./tests

      - name: Test with import sorter
        run: poetry run isort ./pypj ./tests

      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version==3.9 }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: true
