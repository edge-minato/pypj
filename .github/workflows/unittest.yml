name: Unittest
on:
  push:
    branches:
      - main
      - develop
      - alpha
  pull_request:
    branches:
      - main
      - develop
jobs:
  build:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - run: git branch
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Bootstrap poetry
        shell: bash
        run: |
          curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py \
            | python - -y
      - name: Update PATH
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true
      - name: Install dependencies
        shell: bash
        run: poetry install
      - name: Test
        run: poetry run pytest -v --cov=pypj --cov-branch --cov-report=xml
      - name: Linter
        run: poetry run pflake8 ./pypj
      - name: Formatter
        run: poetry run black ./pypj
      - name: Type checker
        run: poetry run mypy ./pypj
      - name: Import sorter
        run: poetry run isort ./pypj
      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version==3.9 }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: true
